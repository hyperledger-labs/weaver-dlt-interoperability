buildscript {
    ext.interop_cordapps_version = "0.6"
    ext.clikt_version = "2.7.1"
    ext.coroutines_version = "1.3.7"
    ext.protobuf_version = "3.11.1"
    ext.grpc_version = "1.29.0" // CURRENT_GRPC_VERSION
    ext.grpc_kotlin_version = "0.1.4" // CURRENT_GRPC_KOTLIN_VERSION

    repositories {
        mavenCentral()
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id "java"
    id "com.google.protobuf" version "0.8.12"
    id "idea"
    id "application"
}

Properties constants = new Properties()

repositories {
    google()
    jcenter()
    mavenCentral()
    mavenLocal()
    flatDir {
        dirs '../../../core/network/corda-interop-app/interop-contracts/build/libs'
        dirs '../../../core/network/corda-interop-app/interop-workflows/build/libs'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'com.google.code.gson:gson:2.8.6'

    // Corda dependencies.
    compile "$corda_release_group:corda-rpc:$corda_release_version"

    // CorDapp dependencies.
    compile project(":contracts-kotlin")
    compile project(":workflows-kotlin")
    compile "com.github.ajalt:clikt:$clikt_version"

    compile(group: 'com.cordaInteropApp', name: 'interop-contracts', version: "$interop_cordapps_version")
    compile(group: 'com.cordaInteropApp', name: 'interop-workflows', version: "$interop_cordapps_version")

    // gRPC and protobuf dependencies
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "io.grpc:grpc-kotlin-stub:$grpc_kotlin_version"
    implementation "com.google.protobuf:protobuf-java:$protobuf_version"
    implementation "com.google.protobuf:protobuf-java-util:$protobuf_version"
    implementation "io.grpc:grpc-netty-shaded:$grpc_version"
    implementation "io.grpc:grpc-protobuf:$grpc_version"
    implementation "io.grpc:grpc-stub:$grpc_version"

    // Logging dependencies.
    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"
    compile "org.apache.logging.log4j:log4j-web:${log4j_version}"
    compile "org.slf4j:jul-to-slf4j:$slf4j_version"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:$protobuf_version" }
    plugins {
        // Specify protoc to generate using kotlin protobuf plugin
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpc_version"
        }
        // Specify protoc to generate using our grpc kotlin plugin
        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:$grpc_kotlin_version"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                // Generate Java gRPC classes
                grpc { }
                // Generate Kotlin gRPC using the custom plugin from library
                grpckt { }
            }
        }
    }
}

mainClassName = "com.cordaSimpleApplication.client.CordaClientKt"
jar {
    manifest {
        attributes(
                'Main-Class': 'com.cordaSimpleApplication.client.CordaClientKt'
        )
    }
}

publishing {
    publications {
        client(MavenPublication) {
            groupId = 'com.cordaSimpleApplication'
            artifactId = 'clients'
            version = '0.4'
            artifact("./clients/build/distributions/clients-0.2.zip")
        }
    }
}
