// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: peer/policy.proto

package org.hyperledger.fabric.protos.peer;

public final class Policy {
  private Policy() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ApplicationPolicyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protos.ApplicationPolicy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * SignaturePolicy type is used if the policy is specified as
     * a combination (using threshold gates) of signatures from MSP
     * principals
     * </pre>
     *
     * <code>.common.SignaturePolicyEnvelope signature_policy = 1;</code>
     * @return Whether the signaturePolicy field is set.
     */
    boolean hasSignaturePolicy();
    /**
     * <pre>
     * SignaturePolicy type is used if the policy is specified as
     * a combination (using threshold gates) of signatures from MSP
     * principals
     * </pre>
     *
     * <code>.common.SignaturePolicyEnvelope signature_policy = 1;</code>
     * @return The signaturePolicy.
     */
    org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope getSignaturePolicy();
    /**
     * <pre>
     * SignaturePolicy type is used if the policy is specified as
     * a combination (using threshold gates) of signatures from MSP
     * principals
     * </pre>
     *
     * <code>.common.SignaturePolicyEnvelope signature_policy = 1;</code>
     */
    org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelopeOrBuilder getSignaturePolicyOrBuilder();

    /**
     * <pre>
     * ChannelConfigPolicyReference is used when the policy is
     * specified as a string that references a policy defined in
     * the configuration of the channel
     * </pre>
     *
     * <code>string channel_config_policy_reference = 2;</code>
     * @return The channelConfigPolicyReference.
     */
    java.lang.String getChannelConfigPolicyReference();
    /**
     * <pre>
     * ChannelConfigPolicyReference is used when the policy is
     * specified as a string that references a policy defined in
     * the configuration of the channel
     * </pre>
     *
     * <code>string channel_config_policy_reference = 2;</code>
     * @return The bytes for channelConfigPolicyReference.
     */
    com.google.protobuf.ByteString
        getChannelConfigPolicyReferenceBytes();

    public org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy.TypeCase getTypeCase();
  }
  /**
   * <pre>
   * ApplicationPolicy captures the diffenrent policy types that
   * are set and evaluted at the application level.
   * </pre>
   *
   * Protobuf type {@code protos.ApplicationPolicy}
   */
  public  static final class ApplicationPolicy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protos.ApplicationPolicy)
      ApplicationPolicyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ApplicationPolicy.newBuilder() to construct.
    private ApplicationPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ApplicationPolicy() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ApplicationPolicy();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ApplicationPolicy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope.Builder subBuilder = null;
              if (typeCase_ == 1) {
                subBuilder = ((org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope) type_).toBuilder();
              }
              type_ =
                  input.readMessage(org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope) type_);
                type_ = subBuilder.buildPartial();
              }
              typeCase_ = 1;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              typeCase_ = 2;
              type_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.hyperledger.fabric.protos.peer.Policy.internal_static_protos_ApplicationPolicy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.hyperledger.fabric.protos.peer.Policy.internal_static_protos_ApplicationPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy.class, org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy.Builder.class);
    }

    private int typeCase_ = 0;
    private java.lang.Object type_;
    public enum TypeCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SIGNATURE_POLICY(1),
      CHANNEL_CONFIG_POLICY_REFERENCE(2),
      TYPE_NOT_SET(0);
      private final int value;
      private TypeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 1: return SIGNATURE_POLICY;
          case 2: return CHANNEL_CONFIG_POLICY_REFERENCE;
          case 0: return TYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase
    getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public static final int SIGNATURE_POLICY_FIELD_NUMBER = 1;
    /**
     * <pre>
     * SignaturePolicy type is used if the policy is specified as
     * a combination (using threshold gates) of signatures from MSP
     * principals
     * </pre>
     *
     * <code>.common.SignaturePolicyEnvelope signature_policy = 1;</code>
     * @return Whether the signaturePolicy field is set.
     */
    public boolean hasSignaturePolicy() {
      return typeCase_ == 1;
    }
    /**
     * <pre>
     * SignaturePolicy type is used if the policy is specified as
     * a combination (using threshold gates) of signatures from MSP
     * principals
     * </pre>
     *
     * <code>.common.SignaturePolicyEnvelope signature_policy = 1;</code>
     * @return The signaturePolicy.
     */
    public org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope getSignaturePolicy() {
      if (typeCase_ == 1) {
         return (org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope) type_;
      }
      return org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope.getDefaultInstance();
    }
    /**
     * <pre>
     * SignaturePolicy type is used if the policy is specified as
     * a combination (using threshold gates) of signatures from MSP
     * principals
     * </pre>
     *
     * <code>.common.SignaturePolicyEnvelope signature_policy = 1;</code>
     */
    public org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelopeOrBuilder getSignaturePolicyOrBuilder() {
      if (typeCase_ == 1) {
         return (org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope) type_;
      }
      return org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope.getDefaultInstance();
    }

    public static final int CHANNEL_CONFIG_POLICY_REFERENCE_FIELD_NUMBER = 2;
    /**
     * <pre>
     * ChannelConfigPolicyReference is used when the policy is
     * specified as a string that references a policy defined in
     * the configuration of the channel
     * </pre>
     *
     * <code>string channel_config_policy_reference = 2;</code>
     * @return The channelConfigPolicyReference.
     */
    public java.lang.String getChannelConfigPolicyReference() {
      java.lang.Object ref = "";
      if (typeCase_ == 2) {
        ref = type_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (typeCase_ == 2) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * ChannelConfigPolicyReference is used when the policy is
     * specified as a string that references a policy defined in
     * the configuration of the channel
     * </pre>
     *
     * <code>string channel_config_policy_reference = 2;</code>
     * @return The bytes for channelConfigPolicyReference.
     */
    public com.google.protobuf.ByteString
        getChannelConfigPolicyReferenceBytes() {
      java.lang.Object ref = "";
      if (typeCase_ == 2) {
        ref = type_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (typeCase_ == 2) {
          type_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeCase_ == 1) {
        output.writeMessage(1, (org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope) type_);
      }
      if (typeCase_ == 2) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, type_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope) type_);
      }
      if (typeCase_ == 2) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy)) {
        return super.equals(obj);
      }
      org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy other = (org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy) obj;

      if (!getTypeCase().equals(other.getTypeCase())) return false;
      switch (typeCase_) {
        case 1:
          if (!getSignaturePolicy()
              .equals(other.getSignaturePolicy())) return false;
          break;
        case 2:
          if (!getChannelConfigPolicyReference()
              .equals(other.getChannelConfigPolicyReference())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (typeCase_) {
        case 1:
          hash = (37 * hash) + SIGNATURE_POLICY_FIELD_NUMBER;
          hash = (53 * hash) + getSignaturePolicy().hashCode();
          break;
        case 2:
          hash = (37 * hash) + CHANNEL_CONFIG_POLICY_REFERENCE_FIELD_NUMBER;
          hash = (53 * hash) + getChannelConfigPolicyReference().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ApplicationPolicy captures the diffenrent policy types that
     * are set and evaluted at the application level.
     * </pre>
     *
     * Protobuf type {@code protos.ApplicationPolicy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protos.ApplicationPolicy)
        org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.hyperledger.fabric.protos.peer.Policy.internal_static_protos_ApplicationPolicy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.hyperledger.fabric.protos.peer.Policy.internal_static_protos_ApplicationPolicy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy.class, org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy.Builder.class);
      }

      // Construct using org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeCase_ = 0;
        type_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.hyperledger.fabric.protos.peer.Policy.internal_static_protos_ApplicationPolicy_descriptor;
      }

      @java.lang.Override
      public org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy getDefaultInstanceForType() {
        return org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy.getDefaultInstance();
      }

      @java.lang.Override
      public org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy build() {
        org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy buildPartial() {
        org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy result = new org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy(this);
        if (typeCase_ == 1) {
          if (signaturePolicyBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = signaturePolicyBuilder_.build();
          }
        }
        if (typeCase_ == 2) {
          result.type_ = type_;
        }
        result.typeCase_ = typeCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy) {
          return mergeFrom((org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy other) {
        if (other == org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy.getDefaultInstance()) return this;
        switch (other.getTypeCase()) {
          case SIGNATURE_POLICY: {
            mergeSignaturePolicy(other.getSignaturePolicy());
            break;
          }
          case CHANNEL_CONFIG_POLICY_REFERENCE: {
            typeCase_ = 2;
            type_ = other.type_;
            onChanged();
            break;
          }
          case TYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int typeCase_ = 0;
      private java.lang.Object type_;
      public TypeCase
          getTypeCase() {
        return TypeCase.forNumber(
            typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope, org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope.Builder, org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelopeOrBuilder> signaturePolicyBuilder_;
      /**
       * <pre>
       * SignaturePolicy type is used if the policy is specified as
       * a combination (using threshold gates) of signatures from MSP
       * principals
       * </pre>
       *
       * <code>.common.SignaturePolicyEnvelope signature_policy = 1;</code>
       * @return Whether the signaturePolicy field is set.
       */
      public boolean hasSignaturePolicy() {
        return typeCase_ == 1;
      }
      /**
       * <pre>
       * SignaturePolicy type is used if the policy is specified as
       * a combination (using threshold gates) of signatures from MSP
       * principals
       * </pre>
       *
       * <code>.common.SignaturePolicyEnvelope signature_policy = 1;</code>
       * @return The signaturePolicy.
       */
      public org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope getSignaturePolicy() {
        if (signaturePolicyBuilder_ == null) {
          if (typeCase_ == 1) {
            return (org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope) type_;
          }
          return org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope.getDefaultInstance();
        } else {
          if (typeCase_ == 1) {
            return signaturePolicyBuilder_.getMessage();
          }
          return org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * SignaturePolicy type is used if the policy is specified as
       * a combination (using threshold gates) of signatures from MSP
       * principals
       * </pre>
       *
       * <code>.common.SignaturePolicyEnvelope signature_policy = 1;</code>
       */
      public Builder setSignaturePolicy(org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope value) {
        if (signaturePolicyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          signaturePolicyBuilder_.setMessage(value);
        }
        typeCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * SignaturePolicy type is used if the policy is specified as
       * a combination (using threshold gates) of signatures from MSP
       * principals
       * </pre>
       *
       * <code>.common.SignaturePolicyEnvelope signature_policy = 1;</code>
       */
      public Builder setSignaturePolicy(
          org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope.Builder builderForValue) {
        if (signaturePolicyBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          signaturePolicyBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * SignaturePolicy type is used if the policy is specified as
       * a combination (using threshold gates) of signatures from MSP
       * principals
       * </pre>
       *
       * <code>.common.SignaturePolicyEnvelope signature_policy = 1;</code>
       */
      public Builder mergeSignaturePolicy(org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope value) {
        if (signaturePolicyBuilder_ == null) {
          if (typeCase_ == 1 &&
              type_ != org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope.getDefaultInstance()) {
            type_ = org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope.newBuilder((org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 1) {
            signaturePolicyBuilder_.mergeFrom(value);
          }
          signaturePolicyBuilder_.setMessage(value);
        }
        typeCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * SignaturePolicy type is used if the policy is specified as
       * a combination (using threshold gates) of signatures from MSP
       * principals
       * </pre>
       *
       * <code>.common.SignaturePolicyEnvelope signature_policy = 1;</code>
       */
      public Builder clearSignaturePolicy() {
        if (signaturePolicyBuilder_ == null) {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
          }
          signaturePolicyBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * SignaturePolicy type is used if the policy is specified as
       * a combination (using threshold gates) of signatures from MSP
       * principals
       * </pre>
       *
       * <code>.common.SignaturePolicyEnvelope signature_policy = 1;</code>
       */
      public org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope.Builder getSignaturePolicyBuilder() {
        return getSignaturePolicyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * SignaturePolicy type is used if the policy is specified as
       * a combination (using threshold gates) of signatures from MSP
       * principals
       * </pre>
       *
       * <code>.common.SignaturePolicyEnvelope signature_policy = 1;</code>
       */
      public org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelopeOrBuilder getSignaturePolicyOrBuilder() {
        if ((typeCase_ == 1) && (signaturePolicyBuilder_ != null)) {
          return signaturePolicyBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 1) {
            return (org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope) type_;
          }
          return org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * SignaturePolicy type is used if the policy is specified as
       * a combination (using threshold gates) of signatures from MSP
       * principals
       * </pre>
       *
       * <code>.common.SignaturePolicyEnvelope signature_policy = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope, org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope.Builder, org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelopeOrBuilder> 
          getSignaturePolicyFieldBuilder() {
        if (signaturePolicyBuilder_ == null) {
          if (!(typeCase_ == 1)) {
            type_ = org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope.getDefaultInstance();
          }
          signaturePolicyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope, org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope.Builder, org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelopeOrBuilder>(
                  (org.hyperledger.fabric.protos.common.Policies.SignaturePolicyEnvelope) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 1;
        onChanged();;
        return signaturePolicyBuilder_;
      }

      /**
       * <pre>
       * ChannelConfigPolicyReference is used when the policy is
       * specified as a string that references a policy defined in
       * the configuration of the channel
       * </pre>
       *
       * <code>string channel_config_policy_reference = 2;</code>
       * @return The channelConfigPolicyReference.
       */
      public java.lang.String getChannelConfigPolicyReference() {
        java.lang.Object ref = "";
        if (typeCase_ == 2) {
          ref = type_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (typeCase_ == 2) {
            type_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ChannelConfigPolicyReference is used when the policy is
       * specified as a string that references a policy defined in
       * the configuration of the channel
       * </pre>
       *
       * <code>string channel_config_policy_reference = 2;</code>
       * @return The bytes for channelConfigPolicyReference.
       */
      public com.google.protobuf.ByteString
          getChannelConfigPolicyReferenceBytes() {
        java.lang.Object ref = "";
        if (typeCase_ == 2) {
          ref = type_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (typeCase_ == 2) {
            type_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ChannelConfigPolicyReference is used when the policy is
       * specified as a string that references a policy defined in
       * the configuration of the channel
       * </pre>
       *
       * <code>string channel_config_policy_reference = 2;</code>
       * @param value The channelConfigPolicyReference to set.
       * @return This builder for chaining.
       */
      public Builder setChannelConfigPolicyReference(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  typeCase_ = 2;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ChannelConfigPolicyReference is used when the policy is
       * specified as a string that references a policy defined in
       * the configuration of the channel
       * </pre>
       *
       * <code>string channel_config_policy_reference = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelConfigPolicyReference() {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * ChannelConfigPolicyReference is used when the policy is
       * specified as a string that references a policy defined in
       * the configuration of the channel
       * </pre>
       *
       * <code>string channel_config_policy_reference = 2;</code>
       * @param value The bytes for channelConfigPolicyReference to set.
       * @return This builder for chaining.
       */
      public Builder setChannelConfigPolicyReferenceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        typeCase_ = 2;
        type_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protos.ApplicationPolicy)
    }

    // @@protoc_insertion_point(class_scope:protos.ApplicationPolicy)
    private static final org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy();
    }

    public static org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ApplicationPolicy>
        PARSER = new com.google.protobuf.AbstractParser<ApplicationPolicy>() {
      @java.lang.Override
      public ApplicationPolicy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ApplicationPolicy(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ApplicationPolicy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ApplicationPolicy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.hyperledger.fabric.protos.peer.Policy.ApplicationPolicy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protos_ApplicationPolicy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protos_ApplicationPolicy_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021peer/policy.proto\022\006protos\032\025common/poli" +
      "cies.proto\"\203\001\n\021ApplicationPolicy\022;\n\020sign" +
      "ature_policy\030\001 \001(\0132\037.common.SignaturePol" +
      "icyEnvelopeH\000\022)\n\037channel_config_policy_r" +
      "eference\030\002 \001(\tH\000B\006\n\004TypeBR\n\"org.hyperled" +
      "ger.fabric.protos.peerZ,github.com/hyper" +
      "ledger/fabric-protos-go/peerb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.hyperledger.fabric.protos.common.Policies.getDescriptor(),
        });
    internal_static_protos_ApplicationPolicy_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protos_ApplicationPolicy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protos_ApplicationPolicy_descriptor,
        new java.lang.String[] { "SignaturePolicy", "ChannelConfigPolicyReference", "Type", });
    org.hyperledger.fabric.protos.common.Policies.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
