"use strict";(self.webpackChunkweaver_dlt_interoperability=self.webpackChunkweaver_dlt_interoperability||[]).push([[8362],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},m="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,k=m["".concat(c,".").concat(d)]||m[d]||b[d]||i;return n?a.createElement(k,o(o({ref:t},p),{},{components:n})):a.createElement(k,o({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7192:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>b,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={id:"fabric-fabric",title:"Asset Exchange: Fabric with Fabric",sidebar_label:"Fabric with Fabric",pagination_label:"Fabric with Fabric",pagination_prev:"external/getting-started/interop/asset-exchange/overview"},o=void 0,l={unversionedId:"external/getting-started/interop/asset-exchange/fabric-fabric",id:"external/getting-started/interop/asset-exchange/fabric-fabric",title:"Asset Exchange: Fabric with Fabric",description:"One Fabric network transfers a bond from Alice to Bob in exchange for a transfer of tokens from Bob to Alice in the other network",source:"@site/docs/external/getting-started/interop/asset-exchange/fabric-fabric.md",sourceDirName:"external/getting-started/interop/asset-exchange",slug:"/external/getting-started/interop/asset-exchange/fabric-fabric",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/fabric-fabric",draft:!1,editUrl:"https://github.com/hyperledger-labs/weaver-dlt-interoperability/edit/main/docs/external/getting-started/interop/asset-exchange/fabric-fabric.md",tags:[],version:"current",frontMatter:{id:"fabric-fabric",title:"Asset Exchange: Fabric with Fabric",sidebar_label:"Fabric with Fabric",pagination_label:"Fabric with Fabric",pagination_prev:"external/getting-started/interop/asset-exchange/overview"},sidebar:"Documentation",previous:{title:"Asset Exchange",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/overview"},next:{title:"Fabric with Corda",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/fabric-corda"}},c={},s=[],p={toc:s},m="wrapper";function b(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"One Fabric network transfers a bond from Alice to Bob in exchange for a transfer of tokens from Bob to Alice in the other network\nEnsure that one of the following chaincodes have been deployed in both networks:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"simpleasset")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"simpleassetandinterop")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"simpleassettransfer"))),(0,r.kt)("p",null,"Run the following steps:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"The hash used in following steps can be replaced by any valid ",(0,r.kt)("inlineCode",{parentName:"td"},"SHA256")," hash.")))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Navigate to either the ",(0,r.kt)("inlineCode",{parentName:"li"},"samples/fabric/fabric-cli")," folder or the ",(0,r.kt)("inlineCode",{parentName:"li"},"samples/fabric/go-cli")," folder in your clone of the Weaver repository."),(0,r.kt)("li",{parentName:"ol"},"Run the following to verify the status of the assets owned by ",(0,r.kt)("inlineCode",{parentName:"li"},"alice")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"bob")," in the two networks:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./scripts/getAssetStatus.sh 2\n"))),(0,r.kt)("li",{parentName:"ol"},"Complete the asset exchange in either of the two different ways:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Using a single command:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Run the following to trigger exchange of bond ",(0,r.kt)("inlineCode",{parentName:"li"},"bond01:a03")," owned by ",(0,r.kt)("inlineCode",{parentName:"li"},"alice")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"network1")," with ",(0,r.kt)("inlineCode",{parentName:"li"},"100")," units of tokens ",(0,r.kt)("inlineCode",{parentName:"li"},"token1")," owned by ",(0,r.kt)("inlineCode",{parentName:"li"},"bob")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"network2"),":",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange-all --network1=network1 --network2=network2 --secret=secrettext --timeout-duration=100 alice:bond01:a03:bob:token1:100\n"))),(0,r.kt)("li",{parentName:"ul"},"To verify that ",(0,r.kt)("inlineCode",{parentName:"li"},"bob")," now owns a bond in exchange for ",(0,r.kt)("inlineCode",{parentName:"li"},"alice")," owning some tokens, run the following:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./scripts/getAssetStatus.sh 2\n"))))),(0,r.kt)("li",{parentName:"ul"},"Using step-by-step commands:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Generate Secret-Hash Pair using following command (prints hash in base64):",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"./bin/fabric-cli hash --hash_fn=SHA256 secrettext\n"))),(0,r.kt)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.kt)("inlineCode",{parentName:"li"},"alice")," locking ",(0,r.kt)("inlineCode",{parentName:"li"},"bond01:a03")," for ",(0,r.kt)("inlineCode",{parentName:"li"},"bob")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"network1"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange lock --timeout-duration=3600 --locker=alice --recipient=bob --hashBase64=ivHErp1x4bJDKuRo6L5bApO/DdoyD/dG0mAZrzLZEIs= --target-network=network1 --param=bond01:a03\n"))),(0,r.kt)("li",{parentName:"ul"},"Run the following to verify ",(0,r.kt)("inlineCode",{parentName:"li"},"alice"),"'s lock:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange is-locked --locker=alice --recipient=bob --target-network=network1 --param=bond01:a03\n"))),(0,r.kt)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.kt)("inlineCode",{parentName:"li"},"bob")," locking ",(0,r.kt)("inlineCode",{parentName:"li"},"100")," units of ",(0,r.kt)("inlineCode",{parentName:"li"},"token1")," for ",(0,r.kt)("inlineCode",{parentName:"li"},"alice")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"network2"),":",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange lock --fungible --timeout-duration=1800 --locker=bob --recipient=alice --hashBase64=ivHErp1x4bJDKuRo6L5bApO/DdoyD/dG0mAZrzLZEIs= --target-network=network2 --param=token1:100\n")),"Note the ",(0,r.kt)("inlineCode",{parentName:"li"},"contract-id")," printed as output in above command. The output line containing ",(0,r.kt)("inlineCode",{parentName:"li"},"contract-id")," (text in base64 after ",(0,r.kt)("inlineCode",{parentName:"li"},"Contract Id:"),") would like this:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u2139 Fungible Asset Locked with Contract Id: E0JZq8Z+eS//2Bt4WU0pU210MvNgDC2hdUT1RgszOq0=, preimage: null, hashvalue: ivHErp1x4bJDKuRo6L5bApO/DdoyD/dG0mAZrzLZEIs=\n"))),(0,r.kt)("li",{parentName:"ul"},"Run the following to verify ",(0,r.kt)("inlineCode",{parentName:"li"},"bob"),"'s lock:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange is-locked --fungible --locker=bob --recipient=alice --target-network=network2 --contract-id=<contract-id>\n"))),(0,r.kt)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.kt)("inlineCode",{parentName:"li"},"alice"),"'s claim for ",(0,r.kt)("inlineCode",{parentName:"li"},"100")," units of ",(0,r.kt)("inlineCode",{parentName:"li"},"token1")," locked by ",(0,r.kt)("inlineCode",{parentName:"li"},"bob")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"network2"),":",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange claim --fungible --recipient=alice --target-network=network2 --contract-id=<contract-id> --secret=<hash-pre-image>\n"))),(0,r.kt)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.kt)("inlineCode",{parentName:"li"},"bob"),"'s claim for ",(0,r.kt)("inlineCode",{parentName:"li"},"bond01:a03")," locked by ",(0,r.kt)("inlineCode",{parentName:"li"},"alice")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"network1"),":",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange claim --recipient=bob --locker=alice --target-network=network1 --param=bond01:a03 --secret=<hash-pre-image>\n")))),"The above steps complete a successful asset exchange between two Fabric networks.\nIn addition to the above commands, following commands can be run if specified timeout has expired and the locked asset remains unclaimed.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"alice")," wants to unlock the bond asset, run the following to trigger ",(0,r.kt)("inlineCode",{parentName:"li"},"alice"),"'s re-claim for ",(0,r.kt)("inlineCode",{parentName:"li"},"bond01:a03")," locked in ",(0,r.kt)("inlineCode",{parentName:"li"},"network1"),":",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange unlock --locker=alice --recipient=bob --target-network=network1 --param=bond01:a03\n"))),(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"bob")," wants to unlock the token asset, run the following to trigger ",(0,r.kt)("inlineCode",{parentName:"li"},"bob"),"'s re-claim for ",(0,r.kt)("inlineCode",{parentName:"li"},"token1:100")," locked in ",(0,r.kt)("inlineCode",{parentName:"li"},"network2"),":",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange unlock --fungible --locker=bob --target-network=network2 --contract-id=<contract-id>\n")))))))))}b.isMDXComponent=!0}}]);