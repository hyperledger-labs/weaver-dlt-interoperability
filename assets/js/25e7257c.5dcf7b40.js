"use strict";(self.webpackChunkweaver_dlt_interoperability=self.webpackChunkweaver_dlt_interoperability||[]).push([[3433],{5680:(e,n,a)=>{a.d(n,{xA:()=>p,yg:()=>b});var t=a(6540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),c=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},p=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},g="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=c(a),m=r,b=g["".concat(s,".").concat(m)]||g[m]||d[m]||i;return a?t.createElement(b,o(o({ref:n},p),{},{components:a})):t.createElement(b,o({ref:n},p))}));function b(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[g]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7717:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=a(8168),r=(a(6540),a(5680));const i={id:"fabric-besu",title:"Asset Exchange: Fabric with Besu",sidebar_label:"Fabric with Besu",pagination_label:"Fabric with Besu",pagination_prev:"external/getting-started/interop/asset-exchange/overview"},o=void 0,l={unversionedId:"external/getting-started/interop/asset-exchange/fabric-besu",id:"external/getting-started/interop/asset-exchange/fabric-besu",title:"Asset Exchange: Fabric with Besu",description:"We will demonstrate asset exchange of a bond in Fabric network1 with 10 BobERC20 tokens on Besu network2.",source:"@site/docs/external/getting-started/interop/asset-exchange/fabric-besu.md",sourceDirName:"external/getting-started/interop/asset-exchange",slug:"/external/getting-started/interop/asset-exchange/fabric-besu",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/fabric-besu",draft:!1,editUrl:"https://github.com/hyperledger-labs/weaver-dlt-interoperability/edit/main/docs/external/getting-started/interop/asset-exchange/fabric-besu.md",tags:[],version:"current",frontMatter:{id:"fabric-besu",title:"Asset Exchange: Fabric with Besu",sidebar_label:"Fabric with Besu",pagination_label:"Fabric with Besu",pagination_prev:"external/getting-started/interop/asset-exchange/overview"},sidebar:"Documentation",previous:{title:"Asset Exchange",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/overview"},next:{title:"Corda with Corda",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/corda-corda"}},s={},c=[],p={toc:c},g="wrapper";function d(e){let{components:n,...a}=e;return(0,r.yg)(g,(0,t.A)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"We will demonstrate asset exchange of a bond in Fabric ",(0,r.yg)("inlineCode",{parentName:"p"},"network1")," with ",(0,r.yg)("inlineCode",{parentName:"p"},"10 BobERC20")," tokens on Besu ",(0,r.yg)("inlineCode",{parentName:"p"},"network2"),".\nFor Fabric commands, run from ",(0,r.yg)("inlineCode",{parentName:"p"},"samples/fabric/fabric-cli")," folder, and for Besu commands, run from ",(0,r.yg)("inlineCode",{parentName:"p"},"samples/besu/besu-cli")," folder, in your clone of the Weaver repository. Here ",(0,r.yg)("inlineCode",{parentName:"p"},"Alice")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"Bob")," in Fabric ",(0,r.yg)("inlineCode",{parentName:"p"},"network1")," correspond to account ",(0,r.yg)("inlineCode",{parentName:"p"},"1")," and account ",(0,r.yg)("inlineCode",{parentName:"p"},"2")," in Besu ",(0,r.yg)("inlineCode",{parentName:"p"},"network2")," respectively. Following are the step-by-step asset exchange process:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Notes"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"The hash used in following steps can be replaced by any valid ",(0,r.yg)("inlineCode",{parentName:"td"},"SHA256")," hash.")))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"From ",(0,r.yg)("inlineCode",{parentName:"li"},"fabric-cli"),", generate secret-hash pair using following command (prints hash in base64):",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"./bin/fabric-cli hash --hash_fn=SHA256 secrettext\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to verify the status of the bond assets owned by ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"bob")," in the Fabric network ",(0,r.yg)("inlineCode",{parentName:"li"},"network1")," from ",(0,r.yg)("inlineCode",{parentName:"li"},"samples/fabric/fabric-cli")," folder:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./scripts/getAssetStatus.sh\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following in ",(0,r.yg)("inlineCode",{parentName:"li"},"besu-cli"),", to verify the status of the assets owned by ",(0,r.yg)("inlineCode",{parentName:"li"},"Alice")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"Bob")," in the Besu network ",(0,r.yg)("inlineCode",{parentName:"li"},"network2"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset get-balance --network=network2 --account=1\n./bin/besu-cli asset get-balance --network=network2 --account=2\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," locking ",(0,r.yg)("inlineCode",{parentName:"li"},"bond01:a03")," for ",(0,r.yg)("inlineCode",{parentName:"li"},"bob")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"network1")," for 60 mins:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange lock --timeout-duration=3600 --locker=alice --recipient=bob --hashBase64=ivHErp1x4bJDKuRo6L5bApO/DdoyD/dG0mAZrzLZEIs= --target-network=network1 --param=bond01:a03\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to verify ",(0,r.yg)("inlineCode",{parentName:"li"},"alice"),"'s lock:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange is-locked --locker=alice --recipient=bob --target-network=network1 --param=bond01:a03\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"bob")," locking ",(0,r.yg)("inlineCode",{parentName:"li"},"10")," units of ",(0,r.yg)("inlineCode",{parentName:"li"},"BobERC20")," tokens for ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"network2")," for 30 mins:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset lock --network=network2 --sender_account=2 --recipient_account=1 --amount=10 --timeout=1800 --hash_base64=ivHErp1x4bJDKuRo6L5bApO/DdoyD/dG0mAZrzLZEIs=\n")),"Note the ",(0,r.yg)("inlineCode",{parentName:"li"},"contract-id")," printed as output in above command. The output line containing ",(0,r.yg)("inlineCode",{parentName:"li"},"contract-id")," (text in base64 after ",(0,r.yg)("inlineCode",{parentName:"li"},"Lock contract ID:"),") would like this:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"Lock contract ID: 48f59da2ac632117bf79b4aa986f5ece8a2439dc143d576965c17bc8275b0925\n")),"Let's refer it ",(0,r.yg)("inlineCode",{parentName:"li"},"<contract-id-2>")," for this demonstration."),(0,r.yg)("li",{parentName:"ul"},"Run the following to verify ",(0,r.yg)("inlineCode",{parentName:"li"},"bob"),"'s lock:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset is-locked --network=network2 --lock_contract_id=<contract-id-2>\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"alice"),"'s claim for ",(0,r.yg)("inlineCode",{parentName:"li"},"10")," units of ",(0,r.yg)("inlineCode",{parentName:"li"},"BobERC20")," tokens locked by ",(0,r.yg)("inlineCode",{parentName:"li"},"bob")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"network2"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset claim --network=network2 --recipient_account=1 --preimage=secrettext --lock_contract_id=<contract-id-2>\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"bob"),"'s claim for ",(0,r.yg)("inlineCode",{parentName:"li"},"bond01:a03")," locked by ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"network1"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange claim --recipient=bob --locker=alice --target-network=network1 --param=bond01:a03 --secret=secrettext\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to verify the status of the bond assets owned by ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"bob")," in the Fabric network ",(0,r.yg)("inlineCode",{parentName:"li"},"network1")," from ",(0,r.yg)("inlineCode",{parentName:"li"},"samples/fabric/fabric-cli")," folder:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./scripts/getAssetStatus.sh\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following in ",(0,r.yg)("inlineCode",{parentName:"li"},"besu-cli"),", to verify the status of the assets owned by ",(0,r.yg)("inlineCode",{parentName:"li"},"Alice")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"Bob")," in the Besu network ",(0,r.yg)("inlineCode",{parentName:"li"},"network2"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset get-balance --network=network2 --account=1\n./bin/besu-cli asset get-balance --network=network2 --account=2\n")))),(0,r.yg)("p",null,"The above steps complete a successful asset exchange between Fabric and Corda networks.\nIn addition to the above commands, following commands can be run if specified timeout has expired and the locked asset remains unclaimed."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"If ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," wants to unlock the bond asset, run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"alice"),"'s re-claim for ",(0,r.yg)("inlineCode",{parentName:"li"},"bond01:a03")," locked in ",(0,r.yg)("inlineCode",{parentName:"li"},"network1"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange unlock --locker=alice --recipient=bob --target-network=network1 --param=bond01:a03\n"))),(0,r.yg)("li",{parentName:"ul"},"If ",(0,r.yg)("inlineCode",{parentName:"li"},"bob")," wants to unlock the token asset, run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"bob"),"'s re-claim for ",(0,r.yg)("inlineCode",{parentName:"li"},"50 BobERC20")," tokens locked in ",(0,r.yg)("inlineCode",{parentName:"li"},"network2"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset unlock --network=network2 --lock_contract_id=<contract-id-2> --sender_account=2\n")))))}d.isMDXComponent=!0}}]);