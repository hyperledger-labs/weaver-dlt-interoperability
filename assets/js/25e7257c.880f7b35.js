"use strict";(self.webpackChunkweaver_dlt_interoperability=self.webpackChunkweaver_dlt_interoperability||[]).push([[7376],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},b=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),b=r,k=d["".concat(s,".").concat(b)]||d[b]||m[b]||i;return n?a.createElement(k,o(o({ref:t},p),{},{components:n})):a.createElement(k,o({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},7532:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={id:"fabric-besu",title:"Asset Exchange: Fabric with Besu",sidebar_label:"Fabric with Besu",pagination_label:"Fabric with Besu",pagination_prev:"external/getting-started/interop/asset-exchange/overview"},o=void 0,l={unversionedId:"external/getting-started/interop/asset-exchange/fabric-besu",id:"external/getting-started/interop/asset-exchange/fabric-besu",title:"Asset Exchange: Fabric with Besu",description:"We will demonstrate asset exchange of a bond in Fabric network1 with 10 BobERC20 tokens on Besu network2.",source:"@site/docs/external/getting-started/interop/asset-exchange/fabric-besu.md",sourceDirName:"external/getting-started/interop/asset-exchange",slug:"/external/getting-started/interop/asset-exchange/fabric-besu",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/fabric-besu",draft:!1,editUrl:"https://github.com/hyperledger-labs/weaver-dlt-interoperability/edit/master/docs/external/getting-started/interop/asset-exchange/fabric-besu.md",tags:[],version:"current",frontMatter:{id:"fabric-besu",title:"Asset Exchange: Fabric with Besu",sidebar_label:"Fabric with Besu",pagination_label:"Fabric with Besu",pagination_prev:"external/getting-started/interop/asset-exchange/overview"},sidebar:"Documentation",previous:{title:"Asset Exchange",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/overview"},next:{title:"Corda with Corda",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/corda-corda"}},s={},c=[],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"We will demonstrate asset exchange of a bond in Fabric ",(0,r.kt)("inlineCode",{parentName:"p"},"network1")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"10 BobERC20")," tokens on Besu ",(0,r.kt)("inlineCode",{parentName:"p"},"network2"),".\nFor Fabric commands, run from ",(0,r.kt)("inlineCode",{parentName:"p"},"samples/fabric/fabric-cli")," folder, and for Besu commands, run from ",(0,r.kt)("inlineCode",{parentName:"p"},"ssamples/besu/besu-cli")," folder. Here ",(0,r.kt)("inlineCode",{parentName:"p"},"Alice")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Bob")," in Fabric ",(0,r.kt)("inlineCode",{parentName:"p"},"network1")," correspond to account ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," and account ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," in Besu ",(0,r.kt)("inlineCode",{parentName:"p"},"network2")," respectively. Following are the step-by-step asset exchange process:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"The hash used in following steps can be replaced by any valid ",(0,r.kt)("inlineCode",{parentName:"td"},"SHA256")," hash.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"From ",(0,r.kt)("inlineCode",{parentName:"li"},"fabric-cli"),", generate secret-hash pair using following command (prints hash in base64):",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"./bin/fabric-cli hash --hash_fn=SHA256 secrettext\n"))),(0,r.kt)("li",{parentName:"ul"},"Run the following to verify the status of the bond assets owned by ",(0,r.kt)("inlineCode",{parentName:"li"},"alice")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"bob")," in the Fabric network ",(0,r.kt)("inlineCode",{parentName:"li"},"network1")," from ",(0,r.kt)("inlineCode",{parentName:"li"},"samples/fabric/fabric-cli")," folder:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./scripts/getAssetStatus.sh\n"))),(0,r.kt)("li",{parentName:"ul"},"Run the following in ",(0,r.kt)("inlineCode",{parentName:"li"},"besu-cli"),", to verify the status of the assets owned by ",(0,r.kt)("inlineCode",{parentName:"li"},"Alice")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Bob")," in the Besu network ",(0,r.kt)("inlineCode",{parentName:"li"},"network2"),":",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset get-balance --network=network2 --account=1\n./bin/besu-cli asset get-balance --network=network2 --account=2\n"))),(0,r.kt)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.kt)("inlineCode",{parentName:"li"},"alice")," locking ",(0,r.kt)("inlineCode",{parentName:"li"},"bond01:a03")," for ",(0,r.kt)("inlineCode",{parentName:"li"},"bob")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"network1")," for 60 mins:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange lock --timeout-duration=3600 --locker=alice --recipient=bob --hashBase64=ivHErp1x4bJDKuRo6L5bApO/DdoyD/dG0mAZrzLZEIs= --target-network=network1 --param=bond01:a03\n"))),(0,r.kt)("li",{parentName:"ul"},"Run the following to verify ",(0,r.kt)("inlineCode",{parentName:"li"},"alice"),"'s lock:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange is-locked --locker=alice --recipient=bob --target-network=network1 --param=bond01:a03\n"))),(0,r.kt)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.kt)("inlineCode",{parentName:"li"},"bob")," locking ",(0,r.kt)("inlineCode",{parentName:"li"},"10")," units of ",(0,r.kt)("inlineCode",{parentName:"li"},"BobERC20")," tokens for ",(0,r.kt)("inlineCode",{parentName:"li"},"alice")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"network2")," for 30 mins:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset lock --network=network2 --sender_account=2 --recipient_account=1 --amount=10 --timeout=1800 --hash_base64=ivHErp1x4bJDKuRo6L5bApO/DdoyD/dG0mAZrzLZEIs=\n")),"Note the ",(0,r.kt)("inlineCode",{parentName:"li"},"contract-id")," printed as output in above command. The output line containing ",(0,r.kt)("inlineCode",{parentName:"li"},"contract-id")," (text in base64 after ",(0,r.kt)("inlineCode",{parentName:"li"},"Lock contract ID:"),") would like this:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Lock contract ID: 48f59da2ac632117bf79b4aa986f5ece8a2439dc143d576965c17bc8275b0925\n")),"Let's refer it ",(0,r.kt)("inlineCode",{parentName:"li"},"<contract-id-2>")," for this demonstration."),(0,r.kt)("li",{parentName:"ul"},"Run the following to verify ",(0,r.kt)("inlineCode",{parentName:"li"},"bob"),"'s lock:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset is-locked --network=network2 --lock_contract_id=<contract-id-2>\n"))),(0,r.kt)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.kt)("inlineCode",{parentName:"li"},"alice"),"'s claim for ",(0,r.kt)("inlineCode",{parentName:"li"},"10")," units of ",(0,r.kt)("inlineCode",{parentName:"li"},"BobERC20")," tokens locked by ",(0,r.kt)("inlineCode",{parentName:"li"},"bob")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"network2"),":",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset claim --network=network2 --recipient_account=1 --preimage=secrettext --lock_contract_id=<contract-id-2>\n"))),(0,r.kt)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.kt)("inlineCode",{parentName:"li"},"bob"),"'s claim for ",(0,r.kt)("inlineCode",{parentName:"li"},"bond01:a03")," locked by ",(0,r.kt)("inlineCode",{parentName:"li"},"alice")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"network1"),":",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange claim --recipient=bob --locker=alice --target-network=network1 --param=bond01:a03 --secret=secrettext\n"))),(0,r.kt)("li",{parentName:"ul"},"Run the following to verify the status of the bond assets owned by ",(0,r.kt)("inlineCode",{parentName:"li"},"alice")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"bob")," in the Fabric network ",(0,r.kt)("inlineCode",{parentName:"li"},"network1")," from ",(0,r.kt)("inlineCode",{parentName:"li"},"samples/fabric/fabric-cli")," folder:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./scripts/getAssetStatus.sh\n"))),(0,r.kt)("li",{parentName:"ul"},"Run the following in ",(0,r.kt)("inlineCode",{parentName:"li"},"besu-cli"),", to verify the status of the assets owned by ",(0,r.kt)("inlineCode",{parentName:"li"},"Alice")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Bob")," in the Besu network ",(0,r.kt)("inlineCode",{parentName:"li"},"network2"),":",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset get-balance --network=network2 --account=1\n./bin/besu-cli asset get-balance --network=network2 --account=2\n")))),(0,r.kt)("p",null,"The above steps complete a successful asset exchange between Fabric and Corda networks.\nIn addition to the above commands, following commands can be run if specified timeout has expired and the locked asset remains unclaimed."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"alice")," wants to unlock the bond asset, run the following to trigger ",(0,r.kt)("inlineCode",{parentName:"li"},"alice"),"'s re-claim for ",(0,r.kt)("inlineCode",{parentName:"li"},"bond01:a03")," locked in ",(0,r.kt)("inlineCode",{parentName:"li"},"network1"),":",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange unlock --locker=alice --recipient=bob --target-network=network1 --param=bond01:a03\n"))),(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"bob")," wants to unlock the token asset, run the following to trigger ",(0,r.kt)("inlineCode",{parentName:"li"},"bob"),"'s re-claim for ",(0,r.kt)("inlineCode",{parentName:"li"},"50 BobERC20")," tokens locked in ",(0,r.kt)("inlineCode",{parentName:"li"},"network2"),":",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset unlock --network=network2 --lock_contract_id=<contract-id-2> --sender_account=2\n")))))}d.isMDXComponent=!0}}]);