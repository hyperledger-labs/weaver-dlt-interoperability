"use strict";(self.webpackChunkweaver_dlt_interoperability=self.webpackChunkweaver_dlt_interoperability||[]).push([[7088],{5680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>y});var a=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=i,y=d["".concat(s,".").concat(m)]||d[m]||g[m]||r;return t?a.createElement(y,o(o({ref:n},p),{},{components:t})):a.createElement(y,o({ref:n},p))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6329:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=t(8168),i=(t(6540),t(5680));const r={id:"corda-besu",title:"Asset Exchange: Corda with Besu",sidebar_label:"Corda with Besu",pagination_label:"Corda with Besu",pagination_prev:"external/getting-started/interop/asset-exchange/overview"},o=void 0,l={unversionedId:"external/getting-started/interop/asset-exchange/corda-besu",id:"external/getting-started/interop/asset-exchange/corda-besu",title:"Asset Exchange: Corda with Besu",description:"We will demonstrate asset exchange of an AliceERC721 NFT in Besu network1 with 10 tokens on Corda_Network.",source:"@site/docs/external/getting-started/interop/asset-exchange/corda-besu.md",sourceDirName:"external/getting-started/interop/asset-exchange",slug:"/external/getting-started/interop/asset-exchange/corda-besu",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/corda-besu",draft:!1,editUrl:"https://github.com/hyperledger-labs/weaver-dlt-interoperability/edit/main/docs/external/getting-started/interop/asset-exchange/corda-besu.md",tags:[],version:"current",frontMatter:{id:"corda-besu",title:"Asset Exchange: Corda with Besu",sidebar_label:"Corda with Besu",pagination_label:"Corda with Besu",pagination_prev:"external/getting-started/interop/asset-exchange/overview"},sidebar:"Documentation",previous:{title:"Asset Exchange",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/overview"},next:{title:"Besu with Besu",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/besu-besu"}},s={},c=[],p={toc:c},d="wrapper";function g(e){let{components:n,...t}=e;return(0,i.yg)(d,(0,a.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"We will demonstrate asset exchange of an ",(0,i.yg)("inlineCode",{parentName:"p"},"AliceERC721")," NFT in Besu ",(0,i.yg)("inlineCode",{parentName:"p"},"network1")," with ",(0,i.yg)("inlineCode",{parentName:"p"},"10")," tokens on ",(0,i.yg)("inlineCode",{parentName:"p"},"Corda_Network"),".\nFor Besu commands, run from ",(0,i.yg)("inlineCode",{parentName:"p"},"samples/besu/besu-cli")," folder, and for Corda commands, run from ",(0,i.yg)("inlineCode",{parentName:"p"},"samples/corda/corda-simple-application")," folder. Here ",(0,i.yg)("inlineCode",{parentName:"p"},"Alice")," with account ",(0,i.yg)("inlineCode",{parentName:"p"},"1")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"Bob")," with account ",(0,i.yg)("inlineCode",{parentName:"p"},"2")," in Besu ",(0,i.yg)("inlineCode",{parentName:"p"},"network1")," correspond to ",(0,i.yg)("inlineCode",{parentName:"p"},"PartyA")," (",(0,i.yg)("inlineCode",{parentName:"p"},"CORDA_PORT=10006"),") and ",(0,i.yg)("inlineCode",{parentName:"p"},"PartyB")," (",(0,i.yg)("inlineCode",{parentName:"p"},"CORDA_PORT=10009"),") in ",(0,i.yg)("inlineCode",{parentName:"p"},"Corda_Network")," respectively. Following are the step-by-step asset exchange process:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"From corda client, generate secret-hash pair using following command (prints hash in base64):",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre"},"./clients/build/install/clients/bin/clients utils hash --hash-fn=SHA256 -s secrettext\n"))),(0,i.yg)("li",{parentName:"ol"},"Run the following to verify the status of the tokens owned by ",(0,i.yg)("inlineCode",{parentName:"li"},"PartyA")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"PartyB")," in the ",(0,i.yg)("inlineCode",{parentName:"li"},"Corda_Network")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"Corda_Network2"),":",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"./scripts/getAssetStatus.sh 2\n"))),(0,i.yg)("li",{parentName:"ol"},"Run the following in ",(0,i.yg)("inlineCode",{parentName:"li"},"besu-cli"),", to verify the status of the assets owned by ",(0,i.yg)("inlineCode",{parentName:"li"},"Alice")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"Bob")," in the Besu networks:",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset get-balance --network=network1 --account=1\n./bin/besu-cli asset get-balance --network=network1 --account=2\n"))),(0,i.yg)("li",{parentName:"ol"},"Complete the asset exchange using following steps:")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Run the following to trigger ",(0,i.yg)("inlineCode",{parentName:"li"},"alice")," locking ",(0,i.yg)("inlineCode",{parentName:"li"},"AliceERC721")," token with id ",(0,i.yg)("inlineCode",{parentName:"li"},"0")," for ",(0,i.yg)("inlineCode",{parentName:"li"},"bob")," in ",(0,i.yg)("inlineCode",{parentName:"li"},"network1")," for 1 hour",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset lock --network=network1 --sender_account=1 --recipient_account=2 --token_id=0 --asset_type=ERC721 --timeout=3600 --hash_base64=ivHErp1x4bJDKuRo6L5bApO/DdoyD/dG0mAZrzLZEIs=\n")),"Note the ",(0,i.yg)("inlineCode",{parentName:"li"},"contract-id")," printed as output in above command. The output line containing ",(0,i.yg)("inlineCode",{parentName:"li"},"contract-id")," (text in base64 after ",(0,i.yg)("inlineCode",{parentName:"li"},"Lock contract ID:"),") would like this:",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"Lock contract ID: 48f59da2ac632117bf79b4aa986f5ece8a2439dc143d576965c17bc8275b0925\n"))),(0,i.yg)("li",{parentName:"ul"},"Run the following to verify ",(0,i.yg)("inlineCode",{parentName:"li"},"alice"),"'s lock, replacing ",(0,i.yg)("inlineCode",{parentName:"li"},"<contract-id>")," with actual ",(0,i.yg)("inlineCode",{parentName:"li"},"contract-id"),":",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset is-locked --network=network1 --lock_contract_id=<contract-id>\n"))),(0,i.yg)("li",{parentName:"ul"},"Run the following to trigger ",(0,i.yg)("inlineCode",{parentName:"li"},"PartyB")," locking ",(0,i.yg)("inlineCode",{parentName:"li"},"50")," units of token type ",(0,i.yg)("inlineCode",{parentName:"li"},"t1")," for ",(0,i.yg)("inlineCode",{parentName:"li"},"PartyA")," in ",(0,i.yg)("inlineCode",{parentName:"li"},"Corda_Network")," for 30 mins:",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-bash"},'CORDA_PORT=10009 ./clients/build/install/clients/bin/clients lock-asset --fungible --hashBase64=ivHErp1x4bJDKuRo6L5bApO/DdoyD/dG0mAZrzLZEIs= --timeout=1800 --recipient="O=PartyA,L=London,C=GB" --param=t1:50\n')),"Note the ",(0,i.yg)("inlineCode",{parentName:"li"},"contract-id")," displayed after successful execution of the command, will be used in next steps. The output containing ",(0,i.yg)("inlineCode",{parentName:"li"},"contract-id")," would like this:",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"HTLC Lock State created with contract ID Right(b=10448674_80d2bee7-5a5d-45df-b14e-60bac4ba1bf3).\n")),(0,i.yg)("inlineCode",{parentName:"li"},"contract-id")," is the alphanumeric text (with underscore and hyphens) after ",(0,i.yg)("inlineCode",{parentName:"li"},"b=")," within parenthesis. Let's refer it ",(0,i.yg)("inlineCode",{parentName:"li"},"<contract-id-2>")," for this demonstration."),(0,i.yg)("li",{parentName:"ul"},"Run the following to verify ",(0,i.yg)("inlineCode",{parentName:"li"},"PartyB"),"'s lock (can be verified by both parties):",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"CORDA_PORT=10006 ./clients/build/install/clients/bin/clients is-asset-locked --contract-id=<contract-id-2>\n"))),(0,i.yg)("li",{parentName:"ul"},"Run the following to trigger ",(0,i.yg)("inlineCode",{parentName:"li"},"PartyA"),"'s claim for ",(0,i.yg)("inlineCode",{parentName:"li"},"50")," units of token type ",(0,i.yg)("inlineCode",{parentName:"li"},"t1")," locked by ",(0,i.yg)("inlineCode",{parentName:"li"},"PartyB")," in ",(0,i.yg)("inlineCode",{parentName:"li"},"Corda_Network"),":",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"CORDA_PORT=10006 ./clients/build/install/clients/bin/clients claim-asset --secret=secrettext --contract-id=<contract-id-2>\n")),(0,i.yg)("inlineCode",{parentName:"li"},"PartyB")," can see its node's logs to get the revealed hash preimage, and use it to claim in the Besu network."),(0,i.yg)("li",{parentName:"ul"},"Run the following to trigger ",(0,i.yg)("inlineCode",{parentName:"li"},"bob"),"'s claim for ",(0,i.yg)("inlineCode",{parentName:"li"},"AliceERC721")," NFT with id ",(0,i.yg)("inlineCode",{parentName:"li"},"0")," locked by ",(0,i.yg)("inlineCode",{parentName:"li"},"alice")," in ",(0,i.yg)("inlineCode",{parentName:"li"},"network1"),":",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset claim --network=network1 --recipient_account=2 --preimage=secrettext --token_id=0 --lock_contract_id=<contract-id>\n")),"The above steps complete a successful asset exchange between two Besu networks.\nIn addition to the above commands, following commands can be run if specified timeout has expired and the locked asset remains unclaimed."),(0,i.yg)("li",{parentName:"ul"},"If ",(0,i.yg)("inlineCode",{parentName:"li"},"alice")," wants to unlock the asset, run the following to trigger ",(0,i.yg)("inlineCode",{parentName:"li"},"alice"),"'s re-claim for ",(0,i.yg)("inlineCode",{parentName:"li"},"AliceERC721")," NFT with id ",(0,i.yg)("inlineCode",{parentName:"li"},"0")," locked in ",(0,i.yg)("inlineCode",{parentName:"li"},"network1"),":",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset unlock --network=network1 --lock_contract_id=<contract-id> --sender_account=1 --token_id=0\n"))),(0,i.yg)("li",{parentName:"ul"},"If ",(0,i.yg)("inlineCode",{parentName:"li"},"PartyB")," wants to unlock the token asset, run the following to trigger unlock for ",(0,i.yg)("inlineCode",{parentName:"li"},"t1:50")," locked in ",(0,i.yg)("inlineCode",{parentName:"li"},"Corda_Network"),":",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"CORDA_PORT=10009 ./clients/build/install/clients/bin/clients unlock-asset --contract-id=<contract-id>\n")))),(0,i.yg)("ol",{start:5},(0,i.yg)("li",{parentName:"ol"},"Run the following to verify the status of the tokens owned by ",(0,i.yg)("inlineCode",{parentName:"li"},"PartyA")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"PartyB")," in the ",(0,i.yg)("inlineCode",{parentName:"li"},"Corda_Network")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"Corda_Network2"),":",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"./scripts/getAssetStatus.sh 2\n"))),(0,i.yg)("li",{parentName:"ol"},"Run the following in ",(0,i.yg)("inlineCode",{parentName:"li"},"besu-cli"),", to verify the status of the assets owned by ",(0,i.yg)("inlineCode",{parentName:"li"},"Alice")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"Bob")," in the Besu networks:",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/besu-cli asset get-balance --network=network1 --account=1\n./bin/besu-cli asset get-balance --network=network1 --account=2\n")))))}g.isMDXComponent=!0}}]);