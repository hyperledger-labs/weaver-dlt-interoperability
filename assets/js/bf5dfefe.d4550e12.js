"use strict";(self.webpackChunkweaver_dlt_interoperability=self.webpackChunkweaver_dlt_interoperability||[]).push([[3836],{5680:(e,n,a)=>{a.d(n,{xA:()=>g,yg:()=>d});var t=a(6540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=t.createContext({}),s=function(e){var n=t.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},g=function(e){var n=s(e.components);return t.createElement(c.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},b=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),p=s(a),b=r,d=p["".concat(c,".").concat(b)]||p[b]||m[b]||i;return a?t.createElement(d,o(o({ref:n},g),{},{components:a})):t.createElement(d,o({ref:n},g))}));function d(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=b;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=a[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}b.displayName="MDXCreateElement"},4733:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var t=a(8168),r=(a(6540),a(5680));const i={id:"fabric-fabric",title:"Asset Exchange: Fabric with Fabric",sidebar_label:"Fabric with Fabric",pagination_label:"Fabric with Fabric",pagination_prev:"external/getting-started/interop/asset-exchange/overview"},o=void 0,l={unversionedId:"external/getting-started/interop/asset-exchange/fabric-fabric",id:"external/getting-started/interop/asset-exchange/fabric-fabric",title:"Asset Exchange: Fabric with Fabric",description:"One Fabric network transfers a bond from Alice to Bob in exchange for a transfer of tokens from Bob to Alice in the other network",source:"@site/docs/external/getting-started/interop/asset-exchange/fabric-fabric.md",sourceDirName:"external/getting-started/interop/asset-exchange",slug:"/external/getting-started/interop/asset-exchange/fabric-fabric",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/fabric-fabric",draft:!1,editUrl:"https://github.com/hyperledger-labs/weaver-dlt-interoperability/edit/main/docs/external/getting-started/interop/asset-exchange/fabric-fabric.md",tags:[],version:"current",frontMatter:{id:"fabric-fabric",title:"Asset Exchange: Fabric with Fabric",sidebar_label:"Fabric with Fabric",pagination_label:"Fabric with Fabric",pagination_prev:"external/getting-started/interop/asset-exchange/overview"},sidebar:"Documentation",previous:{title:"Asset Exchange",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/overview"},next:{title:"Fabric with Corda",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/fabric-corda"}},c={},s=[],g={toc:s},p="wrapper";function m(e){let{components:n,...a}=e;return(0,r.yg)(p,(0,t.A)({},g,a,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"One Fabric network transfers a bond from Alice to Bob in exchange for a transfer of tokens from Bob to Alice in the other network\nEnsure that one of the following chaincodes have been deployed in both networks:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"simpleasset")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"simpleassetandinterop")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"simpleassettransfer"))),(0,r.yg)("p",null,"Run the following steps:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Notes"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"The hash used in following steps can be replaced by any valid ",(0,r.yg)("inlineCode",{parentName:"td"},"SHA256")," hash.")))),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Navigate to either the ",(0,r.yg)("inlineCode",{parentName:"li"},"samples/fabric/fabric-cli")," folder (for the Node.js version) or the ",(0,r.yg)("inlineCode",{parentName:"li"},"samples/fabric/go-cli")," folder (for the Golang version) in your clone of the Weaver repository."),(0,r.yg)("li",{parentName:"ol"},"Run the following to verify the status of the assets owned by ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"bob")," in the two networks:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./scripts/getAssetStatus.sh 2\n"))),(0,r.yg)("li",{parentName:"ol"},"Complete the asset exchange in either of the two different ways:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Using a single command:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Run the following to trigger exchange of bond ",(0,r.yg)("inlineCode",{parentName:"li"},"bond01:a03")," owned by ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"network1")," with ",(0,r.yg)("inlineCode",{parentName:"li"},"100")," units of tokens ",(0,r.yg)("inlineCode",{parentName:"li"},"token1")," owned by ",(0,r.yg)("inlineCode",{parentName:"li"},"bob")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"network2"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange-all --network1=network1 --network2=network2 --secret=secrettext --timeout-duration=100 alice:bond01:a03:bob:token1:100\n"))),(0,r.yg)("li",{parentName:"ul"},"To verify that ",(0,r.yg)("inlineCode",{parentName:"li"},"bob")," now owns a bond in exchange for ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," owning some tokens, run the following:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./scripts/getAssetStatus.sh 2\n"))))),(0,r.yg)("li",{parentName:"ul"},"Using step-by-step commands:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Generate Secret-Hash Pair using following command (prints hash in base64):",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"./bin/fabric-cli hash --hash_fn=SHA256 secrettext\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," locking ",(0,r.yg)("inlineCode",{parentName:"li"},"bond01:a03")," for ",(0,r.yg)("inlineCode",{parentName:"li"},"bob")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"network1"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange lock --timeout-duration=3600 --locker=alice --recipient=bob --hashBase64=ivHErp1x4bJDKuRo6L5bApO/DdoyD/dG0mAZrzLZEIs= --target-network=network1 --param=bond01:a03\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to verify ",(0,r.yg)("inlineCode",{parentName:"li"},"alice"),"'s lock:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange is-locked --locker=alice --recipient=bob --target-network=network1 --param=bond01:a03\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"bob")," locking ",(0,r.yg)("inlineCode",{parentName:"li"},"100")," units of ",(0,r.yg)("inlineCode",{parentName:"li"},"token1")," for ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"network2"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange lock --fungible --timeout-duration=1800 --locker=bob --recipient=alice --hashBase64=ivHErp1x4bJDKuRo6L5bApO/DdoyD/dG0mAZrzLZEIs= --target-network=network2 --param=token1:100\n")),"Note the ",(0,r.yg)("inlineCode",{parentName:"li"},"contract-id")," printed as output in above command. The output line containing ",(0,r.yg)("inlineCode",{parentName:"li"},"contract-id")," (text in base64 after ",(0,r.yg)("inlineCode",{parentName:"li"},"Contract Id:"),") would like this:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\u2139 Fungible Asset Locked with Contract Id: E0JZq8Z+eS//2Bt4WU0pU210MvNgDC2hdUT1RgszOq0=, preimage: null, hashvalue: ivHErp1x4bJDKuRo6L5bApO/DdoyD/dG0mAZrzLZEIs=\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to verify ",(0,r.yg)("inlineCode",{parentName:"li"},"bob"),"'s lock:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange is-locked --fungible --locker=bob --recipient=alice --target-network=network2 --contract-id=<contract-id>\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"alice"),"'s claim for ",(0,r.yg)("inlineCode",{parentName:"li"},"100")," units of ",(0,r.yg)("inlineCode",{parentName:"li"},"token1")," locked by ",(0,r.yg)("inlineCode",{parentName:"li"},"bob")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"network2"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange claim --fungible --recipient=alice --target-network=network2 --contract-id=<contract-id> --secret=<hash-pre-image>\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"bob"),"'s claim for ",(0,r.yg)("inlineCode",{parentName:"li"},"bond01:a03")," locked by ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"network1"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange claim --recipient=bob --locker=alice --target-network=network1 --param=bond01:a03 --secret=<hash-pre-image>\n")))),"The above steps complete a successful asset exchange between two Fabric networks.\nIn addition to the above commands, following commands can be run if specified timeout has expired and the locked asset remains unclaimed.",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"If ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," wants to unlock the bond asset, run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"alice"),"'s re-claim for ",(0,r.yg)("inlineCode",{parentName:"li"},"bond01:a03")," locked in ",(0,r.yg)("inlineCode",{parentName:"li"},"network1"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange unlock --locker=alice --recipient=bob --target-network=network1 --param=bond01:a03\n"))),(0,r.yg)("li",{parentName:"ul"},"If ",(0,r.yg)("inlineCode",{parentName:"li"},"bob")," wants to unlock the token asset, run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"bob"),"'s re-claim for ",(0,r.yg)("inlineCode",{parentName:"li"},"token1:100")," locked in ",(0,r.yg)("inlineCode",{parentName:"li"},"network2"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange unlock --fungible --locker=bob --target-network=network2 --contract-id=<contract-id>\n")))))))))}m.isMDXComponent=!0}}]);