"use strict";(self.webpackChunkweaver_dlt_interoperability=self.webpackChunkweaver_dlt_interoperability||[]).push([[5058],{5680:(e,a,t)=>{t.d(a,{xA:()=>p,yg:()=>y});var n=t(6540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),c=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},p=function(e){var a=c(e.components);return n.createElement(s.Provider,{value:a},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=r,y=d["".concat(s,".").concat(m)]||d[m]||g[m]||i;return t?n.createElement(y,o(o({ref:a},p),{},{components:t})):n.createElement(y,o({ref:a},p))}));function y(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6457:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=t(8168),r=(t(6540),t(5680));const i={id:"fabric-corda",title:"Asset Exchange: Fabric with Corda",sidebar_label:"Fabric with Corda",pagination_label:"Fabric with Corda",pagination_prev:"external/getting-started/interop/asset-exchange/overview"},o=void 0,l={unversionedId:"external/getting-started/interop/asset-exchange/fabric-corda",id:"external/getting-started/interop/asset-exchange/fabric-corda",title:"Asset Exchange: Fabric with Corda",description:"We will demonstrate asset exchange of a bond in Fabric network1 with tokens on Corda_Network.",source:"@site/docs/external/getting-started/interop/asset-exchange/fabric-corda.md",sourceDirName:"external/getting-started/interop/asset-exchange",slug:"/external/getting-started/interop/asset-exchange/fabric-corda",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/fabric-corda",draft:!1,editUrl:"https://github.com/hyperledger-labs/weaver-dlt-interoperability/edit/main/docs/external/getting-started/interop/asset-exchange/fabric-corda.md",tags:[],version:"current",frontMatter:{id:"fabric-corda",title:"Asset Exchange: Fabric with Corda",sidebar_label:"Fabric with Corda",pagination_label:"Fabric with Corda",pagination_prev:"external/getting-started/interop/asset-exchange/overview"},sidebar:"Documentation",previous:{title:"Asset Exchange",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/overview"},next:{title:"Fabric with Besu",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange/fabric-besu"}},s={},c=[],p={toc:c},d="wrapper";function g(e){let{components:a,...t}=e;return(0,r.yg)(d,(0,n.A)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"We will demonstrate asset exchange of a bond in Fabric ",(0,r.yg)("inlineCode",{parentName:"p"},"network1")," with tokens on ",(0,r.yg)("inlineCode",{parentName:"p"},"Corda_Network"),".\nFor Fabric commands, run from ",(0,r.yg)("inlineCode",{parentName:"p"},"samples/fabric/fabric-cli")," folder, and for Corda commands, run from ",(0,r.yg)("inlineCode",{parentName:"p"},"samples/corda/corda-simple-application")," folder, in your clone of the Weaver repository. Here ",(0,r.yg)("inlineCode",{parentName:"p"},"Alice")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"Bob")," in Fabric ",(0,r.yg)("inlineCode",{parentName:"p"},"network1")," correspond to ",(0,r.yg)("inlineCode",{parentName:"p"},"PartyA")," (",(0,r.yg)("inlineCode",{parentName:"p"},"CORDA_PORT=10006"),") and ",(0,r.yg)("inlineCode",{parentName:"p"},"PartyB")," (",(0,r.yg)("inlineCode",{parentName:"p"},"CORDA_PORT=10009"),") in ",(0,r.yg)("inlineCode",{parentName:"p"},"Corda_Network")," respectively. Following are the step-by-step asset exchange process:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Notes"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"The hash used in following steps can be replaced by any valid ",(0,r.yg)("inlineCode",{parentName:"td"},"SHA256")," hash.")))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Run the following to verify the status of the bond assets owned by ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"bob")," in the Fabric network ",(0,r.yg)("inlineCode",{parentName:"li"},"network1")," from ",(0,r.yg)("inlineCode",{parentName:"li"},"samples/fabric/fabric-cli")," folder:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./scripts/getAssetStatus.sh\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to verify the status of the assets owned by ",(0,r.yg)("inlineCode",{parentName:"li"},"PartyA")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"PartyB")," in the ",(0,r.yg)("inlineCode",{parentName:"li"},"Corda_Network")," from ",(0,r.yg)("inlineCode",{parentName:"li"},"samples/corda/corda-simple-application")," folder:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./scripts/getAssetStatus.sh\n"))),(0,r.yg)("li",{parentName:"ul"},"Generate Secret-Hash Pair using following command (prints hash in base64):",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"./bin/fabric-cli hash --hash_fn=SHA256 secrettext\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," locking ",(0,r.yg)("inlineCode",{parentName:"li"},"bond01:a03")," for ",(0,r.yg)("inlineCode",{parentName:"li"},"bob")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"network1")," for 60 mins:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange lock --timeout-duration=3600 --locker=alice --recipient=bob --hashBase64=ivHErp1x4bJDKuRo6L5bApO/DdoyD/dG0mAZrzLZEIs= --target-network=network1 --param=bond01:a03\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to verify ",(0,r.yg)("inlineCode",{parentName:"li"},"alice"),"'s lock:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange is-locked --locker=alice --recipient=bob --target-network=network1 --param=bond01:a03\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"PartyB")," locking ",(0,r.yg)("inlineCode",{parentName:"li"},"50")," units of token type ",(0,r.yg)("inlineCode",{parentName:"li"},"t1")," for ",(0,r.yg)("inlineCode",{parentName:"li"},"PartyA")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"Corda_Network")," for 30 mins:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'CORDA_PORT=10009 ./clients/build/install/clients/bin/clients lock-asset --fungible --hashBase64=ivHErp1x4bJDKuRo6L5bApO/DdoyD/dG0mAZrzLZEIs= --timeout=1800 --recipient="O=PartyA,L=London,C=GB" --param=t1:50\n')),"Note the ",(0,r.yg)("inlineCode",{parentName:"li"},"contract-id")," displayed after successful execution of the command, will be used in next steps. The output containing ",(0,r.yg)("inlineCode",{parentName:"li"},"contract-id")," would like this:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"HTLC Lock State created with contract ID Right(b=10448674_80d2bee7-5a5d-45df-b14e-60bac4ba1bf3).\n")),(0,r.yg)("inlineCode",{parentName:"li"},"contract-id")," is the alphanumeric text (with underscore and hyphens) after ",(0,r.yg)("inlineCode",{parentName:"li"},"b=")," within parenthesis."),(0,r.yg)("li",{parentName:"ul"},"Run the following to verify ",(0,r.yg)("inlineCode",{parentName:"li"},"PartyB"),"'s lock (can be verified by both parties):",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"CORDA_PORT=10006 ./clients/build/install/clients/bin/clients is-asset-locked --contract-id=<contract-id>\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"PartyA"),"'s claim for ",(0,r.yg)("inlineCode",{parentName:"li"},"50")," units of token type ",(0,r.yg)("inlineCode",{parentName:"li"},"t1")," locked by ",(0,r.yg)("inlineCode",{parentName:"li"},"PartyB")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"Corda_Network"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"CORDA_PORT=10006 ./clients/build/install/clients/bin/clients claim-asset --secret=secrettext --contract-id=<contract-id>\n")),(0,r.yg)("inlineCode",{parentName:"li"},"PartyB")," can see its node's logs to get the revealed hash preimage, and use it to claim the bond in the Fabric network."),(0,r.yg)("li",{parentName:"ul"},"Run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"bob"),"'s claim for ",(0,r.yg)("inlineCode",{parentName:"li"},"bond01:a03")," locked by ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"network1"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange claim --recipient=bob --locker=alice --target-network=network1 --param=bond01:a03 --secret=secrettext\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to verify the status of the bond assets owned by ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"bob")," in the Fabric network ",(0,r.yg)("inlineCode",{parentName:"li"},"network1")," from ",(0,r.yg)("inlineCode",{parentName:"li"},"samples/fabric/fabric-cli")," folder:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./scripts/getAssetStatus.sh\n"))),(0,r.yg)("li",{parentName:"ul"},"Run the following to verify the status of the assets owned by ",(0,r.yg)("inlineCode",{parentName:"li"},"PartyA")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"PartyB")," in the ",(0,r.yg)("inlineCode",{parentName:"li"},"Corda_Network")," from ",(0,r.yg)("inlineCode",{parentName:"li"},"samples/corda/corda-simple-application")," folder:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./scripts/getAssetStatus.sh\n")))),(0,r.yg)("p",null,"The above steps complete a successful asset exchange between Fabric and Corda networks.\nIn addition to the above commands, following commands can be run if specified timeout has expired and the locked asset remains unclaimed."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"If ",(0,r.yg)("inlineCode",{parentName:"li"},"alice")," wants to unlock the bond asset, run the following to trigger ",(0,r.yg)("inlineCode",{parentName:"li"},"alice"),"'s re-claim for ",(0,r.yg)("inlineCode",{parentName:"li"},"bond01:a03")," locked in ",(0,r.yg)("inlineCode",{parentName:"li"},"network1"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/fabric-cli asset exchange unlock --locker=alice --recipient=bob --target-network=network1 --param=bond01:a03\n"))),(0,r.yg)("li",{parentName:"ul"},"If ",(0,r.yg)("inlineCode",{parentName:"li"},"PartyB")," wants to unlock the token asset, run the following to trigger unlock for ",(0,r.yg)("inlineCode",{parentName:"li"},"t1:50")," locked in ",(0,r.yg)("inlineCode",{parentName:"li"},"Corda_Network"),":",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"CORDA_PORT=10009 ./clients/build/install/clients/bin/clients unlock-asset --contract-id=<contract-id>\n")))))}g.isMDXComponent=!0}}]);